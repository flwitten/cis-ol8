---
# The following tasks will be part of this playbook:
# - Create Ansible User
# - Add sudo (without password) on inventory host
# - Add SSH Key
# - Add repositories
# - Update all packages
# - Install python

- name: Prepare Inventory Hosts
  hosts: all
  remote_user: root

  vars:
    user: ansible
    local_ssh_dir: "/etc/keys"

  vars_files:
    - vars/repositories.yml

  tasks:
    - name: Get local user on ansible controller
      local_action:
        module: shell
        _raw_params: "whoami"
      changed_when: no
      check_mode: no
      register: local_user
    
    - name: Create ansible user
      user:
        name: ansible
        shell: /bin/bash
        create_home: true
      become: true

    - name: Grant sudo to ansible
      lineinfile:
        path: /etc/sudoers.d/ansible
        line: 'ansible  ALL=(ALL)  NOPASSWD: ALL'
        state: present
        create: true
    
    - name: Create sshkey directory
      file:
        path: /etc/keys/ansible
        state: directory
        mode: 0700
        owner: ansible
        group: root

    - name: Copy SSH Public Key
      authorized_key:
        user: ansible
        key: "{{ lookup('file', local_ssh_dir + '/' + local_user.stdout + '/' + user + '.pub' ) }}"
        state: present
        path: /etc/keys/ansible/authorized_keys
        manage_dir: true

    - name: Change Authorized Key locatoin
      lineinfile:
        path: /etc/ssh/sshd_config
        line: AuthorizedKeysFile   /etc/keys/%u/authorized_keys
        regexp: AuthorizedKeysFile
      notify: Restart sshd
    
    - name: Add Repositories
      yum_repository:
        file: octs
        name: '{{ item.name }}'
        description: '{{ item.desc }}'
        baseurl: '{{ item.baseurl }}'
        gpgcheck: '{{ item.gpgcheck }}'
        gpgkey: '{{ item.gpgkey }}'
        enabled: '{{ item.enabled }}'
      loop: '{{ repositories }}'
      notify: Clean DNF Cache
    
    - name: Update all packages
      dnf:
        name: "*"
        state: latest

    - name: Install Python3
      dnf:
        name: '@python36:3.6'
        state: present

  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
    
    - name: Clean DNF Cache
      shell: dnf clean all && dnf makecache
      args:
        warn: false
      changed_when: no
      check_mode: no
...
